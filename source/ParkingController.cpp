#include <ParkingController.hpp>

ParkingController::ParkingController(ConsolePrinter<std::string> *printer) {
    this->printer = printer;
}

void ParkingController::fill_parking() {
    this->init_parking();
    this->print_parking();
    for (int i = 0; i < CustomerManager::get_customer_count(); i++) {
        Customer *customer = CustomerManager::get_customer(i);
        int x = customer->get_parking_space()->get_x();
        int y = customer->get_parking_space()->get_y();
        Color color = customer->get_vehicle()->get_color();
        this->printer->print(X_COORD + x, Y_COORD + y, '#', Color::WHITE, color);
        this->printer->print(X_COORD + x + 1, Y_COORD + y, '#', Color::WHITE, color);
    }
}

void ParkingController::print_parking() {
    for (int i = 0; i < PARKING_HEIGHT; i++) {
        for (int j = 0; j < PARKING_WIDTH; j++) {
            if (this->parking.at(i).at(j) == "0") {
                this->printer->print(X_COORD + j, Y_COORD + i, '#', Color::BLACK, Color::BLACK);
            } else {
                if (this->parking.at(i).at(j) == "1") {
                    this->printer->print(X_COORD + j, Y_COORD + i, '#', Color::WHITE, Color::WHITE);
                } else if (this->parking.at(i).at(j) == "2") {
                    this->printer->print(X_COORD + j, Y_COORD + i, char(178), Color::WHITE, Color::BLACK);
                }
            }
        }
    }
}

void ParkingController::init_parking() {
    this->parking = {{"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "2", "2", "2", "2", "0", "0", "2", "2", "2", "2", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
                     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0"}};
}